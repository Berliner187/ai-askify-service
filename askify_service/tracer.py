import logging
import requests
from threading import Thread

from django.conf import settings

from askify_app.settings import DEBUG


WARNING_SYMBOL = "üöß"
ERROR_SYMBOL = "‚ùå"
CRITICAL_SYMBOL = "‚ö°Ô∏è‚ò†Ô∏è"
CONFIRM_SYMBOL = "‚úÖ"


class TelegramHandler(logging.Handler):
    """
        –ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ –≤ Telegram.
        –†–∞–±–æ—Ç–∞–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å.
    """

    def __init__(self):
        super().__init__()
        self.token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)
        self.chat_id = getattr(settings, 'TELEGRAM_CHAT_ID', None)

    def emit(self, record):
        if DEBUG:
            return
        if not self.token or not self.chat_id or record.levelno < logging.WARNING:
            return

        log_entry = self.format(record)

        if record.levelno == logging.CRITICAL:
            icon = CRITICAL_SYMBOL
        elif record.levelno == logging.ERROR:
            icon = ERROR_SYMBOL
        elif record.levelno == logging.WARNING:
            icon = WARNING_SYMBOL
        else:
            icon = ""

        message = f"{icon} <b>{record.levelname}</b>\n\n"
        message += f"<pre>{log_entry}</pre>"

        thread = Thread(target=self.send_message, args=(message,))
        thread.start()

    def send_message(self, message):
        """ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–∂—É—Ä–Ω—ã–π –±–æ—Ç. –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ."""
        url = f'https://api.telegram.org/bot{self.token}/sendMessage'
        payload = {
            'chat_id': self.chat_id,
            'text': message,
            'parse_mode': 'HTML'
        }
        try:
            requests.post(url, json=payload, timeout=5)
        except Exception as e:
            print(f"CRITICAL: Failed to send log to Telegram. Error: {e}")
